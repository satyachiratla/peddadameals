{"ast":null,"code":"var _jsxFileName = \"/Users/vivekchowdary/Food/src/components/Cart/Checkout.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport classes from \"./Checkout.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Checkout = props => {\n  _s();\n\n  const [formInputsIsValid, setFormInputsIsValid] = useState({\n    name: true,\n    street: true,\n    postal: true,\n    city: true\n  });\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const isEmpty = value => value.trim() === \"\";\n\n  const isSixNum = value => value.trim().length === 6;\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostal = postalInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n    const nameIsValid = isEmpty(enteredName);\n    const streetIsValid = isEmpty(enteredStreet);\n    const postalIsValid = isSixNum(enteredPostal);\n    const cityIsValid = isEmpty(enteredCity);\n    setFormInputsIsValid({\n      name: nameIsValid,\n      street: streetIsValid,\n      postal: postalIsValid,\n      city: cityIsValid\n    });\n    const formIsValid = nameIsValid && streetIsValid && postalIsValid && cityIsValid;\n\n    if (!formIsValid) {\n      return;\n    }\n  };\n\n  const nameErrorClasse = `${classes.control} ${formInputsIsValid.name ? '' : classes.invalid}`;\n  const streetErrorClasse = `${classes.control} ${formInputsIsValid.street ? '' : classes.invalid}`;\n  const postalErrorClasse = `${classes.control} ${formInputsIsValid.postal ? '' : classes.invalid}`;\n  const cityErrorClasse = `${classes.control} ${formInputsIsValid.city ? '' : classes.invalid}`;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameErrorClasse,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), !formInputsIsValid.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Please enter a valid name! \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: streetErrorClass,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), !formInputsIsValid.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Please enter a valid street! \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: postalErrorClass,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Pin Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), !formInputsIsValid.postal && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Please enter a valid PinCode! (6 Integers) \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cityErrorClass,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), !formInputsIsValid.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Please enter a valid City! \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"V6+cADlXD3eky4yu1HLexi+h0Ls=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["/Users/vivekchowdary/Food/src/components/Cart/Checkout.js"],"names":["useRef","useState","classes","Checkout","props","formInputsIsValid","setFormInputsIsValid","name","street","postal","city","nameInputRef","streetInputRef","postalInputRef","cityInputRef","isEmpty","value","trim","isSixNum","length","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredPostal","enteredCity","nameIsValid","streetIsValid","postalIsValid","cityIsValid","formIsValid","nameErrorClasse","control","invalid","streetErrorClasse","postalErrorClasse","cityErrorClasse","form","streetErrorClass","postalErrorClass","cityErrorClass","actions","onCancel","submit"],"mappings":"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","sourcesContent":["import { useRef, useState } from \"react\";\nimport classes from \"./Checkout.module.css\";\n\nconst Checkout = (props) => {\n  const [formInputsIsValid, setFormInputsIsValid] = useState({\n    name: true,\n    street: true,\n    postal: true,\n    city: true,\n  });\n\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const isEmpty = (value) => value.trim() === \"\";\n  const isSixNum = (value) => value.trim().length === 6;\n\n  const confirmHandler = (event) => {\n    event.preventDefault();\n\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostal = postalInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n\n    const nameIsValid = isEmpty(enteredName);\n    const streetIsValid = isEmpty(enteredStreet);\n    const postalIsValid = isSixNum(enteredPostal);\n    const cityIsValid = isEmpty(enteredCity);\n\n    setFormInputsIsValid({\n      name: nameIsValid,\n      street: streetIsValid,\n      postal: postalIsValid,\n      city: cityIsValid,\n    });\n\n    const formIsValid =\n      nameIsValid && streetIsValid && postalIsValid && cityIsValid;\n\n    if (!formIsValid) {\n      return;\n    }\n  };\n\n  const nameErrorClasse = `${classes.control} ${formInputsIsValid.name ? '' : classes.invalid}`;\n  const streetErrorClasse = `${classes.control} ${formInputsIsValid.street ? '' : classes.invalid}`;\n  const postalErrorClasse = `${classes.control} ${formInputsIsValid.postal ? '' : classes.invalid}`;\n  const cityErrorClasse = `${classes.control} ${formInputsIsValid.city ? '' : classes.invalid}`;\n\n  return (\n    <form className={classes.form} onSubmit={confirmHandler}>\n      <div className={nameErrorClasse}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input type=\"text\" id=\"name\" ref={nameInputRef} />\n        { !formInputsIsValid.name && <p> Please enter a valid name! </p>}\n      </div>\n      <div className={streetErrorClass}>\n        <label htmlFor=\"street\">Street</label>\n        <input type=\"text\" id=\"street\" ref={streetInputRef} />\n        { !formInputsIsValid.street && <p> Please enter a valid street! </p>}\n      </div>\n      <div className={postalErrorClass}>\n        <label htmlFor=\"postal\">Pin Code</label>\n        <input type=\"text\" id=\"postal\" ref={postalInputRef} />\n        { !formInputsIsValid.postal && <p> Please enter a valid PinCode! (6 Integers) </p>}\n      </div>\n      <div className={cityErrorClass}>\n        <label htmlFor=\"city\">City</label>\n        <input type=\"text\" id=\"city\" ref={cityInputRef} />\n        { !formInputsIsValid.city && <p> Please enter a valid City! </p>}\n      </div>\n      <div className={classes.actions}>\n        <button type=\"button\" onClick={props.onCancel}>\n          Cancel\n        </button>\n        <button className={classes.submit}>Confirm</button>\n      </div>\n    </form>\n  );\n};\n\nexport default Checkout;\n"]},"metadata":{},"sourceType":"module"}