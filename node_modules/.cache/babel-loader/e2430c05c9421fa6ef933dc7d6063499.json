{"ast":null,"code":"var _jsxFileName = \"/Users/vivekchowdary/My_World/FoodApp/src/components/Cart/Cart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport CartContext from \"../../store/cart-context\";\nimport Modal from \"../UI/Modal\";\nimport classes from \"./Cart.module.css\";\nimport CartItem from \"./CartItem/CartItem\";\nimport Checkout from \"./Checkout\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const [isCheckout, setIsCheckout] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [didSubmit, setDidSubmit] = useState(false);\n  const ctxCart = useContext(CartContext);\n  const totalAmount = `â‚¹${ctxCart.totalAmount.toFixed(2)}`;\n  const hasItems = ctxCart.items.length > 0;\n\n  const cartItemAddHanlder = item => {\n    ctxCart.addItem({ ...item,\n      amount: 1\n    });\n  };\n\n  const cartItemRemoveHandler = id => {\n    ctxCart.removeItem(id);\n  };\n\n  const orderHandler = () => {\n    setIsCheckout(true);\n  };\n\n  const orderSubmitHandler = userData => {\n    // const firebaseapi = \"https://react-http-75e6f-default-rtdb.firebaseio.com/orders.json\"\n    setIsSubmitting(true); // fetch(firebaseapi, {\n    //   method: \"POST\",\n    //   body: JSON.stringify({\n    //     user: userData,\n    //     orderedItems: ctxCart.items,\n    //   }),\n    // });\n\n    axios.post('https://mealsapi.vercel.app/addorder', {\n      user: userData,\n      orderedItems: ctxCart.items\n    });\n    setIsSubmitting(false);\n    setDidSubmit(true);\n    ctxCart.clearCart();\n  };\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes[\"cart-items\"],\n    children: ctxCart.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.name,\n      amount: item.amount,\n      price: item.price,\n      onAdd: cartItemAddHanlder.bind(null, item),\n      onRemove: cartItemRemoveHandler.bind(null, item.id)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n\n  const modalActions = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.actions,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes[\"button--alt\"],\n      onClick: props.onHideCart,\n      children: [\" \", \"Close\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.button,\n      onClick: orderHandler,\n      children: [\" \", \"Order\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n\n  const cartModalContent = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.total,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" Total Amount \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" \", totalAmount, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), isCheckout && /*#__PURE__*/_jsxDEV(Checkout, {\n      onConfirm: orderSubmitHandler,\n      onCancel: props.onHideCart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), !isCheckout && modalActions]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n\n  const isSubmittingModalContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \" Submitting order data... \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 36\n  }, this);\n\n  const didSubmitModalContent = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Succesfully sent the order \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.button,\n        onClick: props.onHideCart,\n        children: [\" \", \"Close\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onHideCart,\n    children: [!isSubmitting && !didSubmit && cartModalContent, isSubmitting && isSubmittingModalContent, !isSubmitting && didSubmit && didSubmitModalContent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cart, \"/nHcYq4/RpHw2Fm0eE7ANXmtejw=\");\n\n_c = Cart;\nexport default Cart; // fetch(\"http://localhost:8080/addorder\", {\n//       method: \"POST\",\n//       body: JSON.stringify({\n//         user: userData,\n//         orderedItems: ctxCart.items,\n//       }),\n//     });\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["/Users/vivekchowdary/My_World/FoodApp/src/components/Cart/Cart.js"],"names":["React","useContext","useState","CartContext","Modal","classes","CartItem","Checkout","axios","Cart","props","isCheckout","setIsCheckout","isSubmitting","setIsSubmitting","didSubmit","setDidSubmit","ctxCart","totalAmount","toFixed","hasItems","items","length","cartItemAddHanlder","item","addItem","amount","cartItemRemoveHandler","id","removeItem","orderHandler","orderSubmitHandler","userData","post","user","orderedItems","clearCart","cartItems","map","name","price","bind","modalActions","actions","onHideCart","button","cartModalContent","total","isSubmittingModalContent","didSubmitModalContent"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport CartContext from \"../../store/cart-context\";\nimport Modal from \"../UI/Modal\";\nimport classes from \"./Cart.module.css\";\nimport CartItem from \"./CartItem/CartItem\";\nimport Checkout from \"./Checkout\";\nimport axios from \"axios\";\n\nconst Cart = (props) => {\n  const [isCheckout, setIsCheckout] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [didSubmit, setDidSubmit] = useState(false);\n\n  const ctxCart = useContext(CartContext);\n\n  const totalAmount = `â‚¹${ctxCart.totalAmount.toFixed(2)}`;\n\n  const hasItems = ctxCart.items.length > 0;\n\n  const cartItemAddHanlder = (item) => {\n    ctxCart.addItem({ ...item, amount: 1 });\n  };\n\n  const cartItemRemoveHandler = (id) => {\n    ctxCart.removeItem(id);\n  };\n\n  const orderHandler = () => {\n    setIsCheckout(true);\n  };\n\n  const orderSubmitHandler = (userData) => {\n    // const firebaseapi = \"https://react-http-75e6f-default-rtdb.firebaseio.com/orders.json\"\n    setIsSubmitting(true);\n    // fetch(firebaseapi, {\n    //   method: \"POST\",\n    //   body: JSON.stringify({\n    //     user: userData,\n    //     orderedItems: ctxCart.items,\n    //   }),\n    // });\n    axios.post('https://mealsapi.vercel.app/addorder', {\n      user: userData,\n      orderedItems: ctxCart.items\n    })\n    setIsSubmitting(false);\n    setDidSubmit(true);\n    ctxCart.clearCart();\n  };\n\n  const cartItems = (\n    <ul className={classes[\"cart-items\"]}>\n      {ctxCart.items.map((item) => (\n        <CartItem\n          key={item.id}\n          name={item.name}\n          amount={item.amount}\n          price={item.price}\n          onAdd={cartItemAddHanlder.bind(null, item)}\n          onRemove={cartItemRemoveHandler.bind(null, item.id)}\n        />\n      ))}\n    </ul>\n  );\n\n  const modalActions = (\n    <div className={classes.actions}>\n      <button className={classes[\"button--alt\"]} onClick={props.onHideCart}>\n        {\" \"}\n        Close{\" \"}\n      </button>\n      {hasItems && (\n        <button className={classes.button} onClick={orderHandler}>\n          {\" \"}\n          Order{\" \"}\n        </button>\n      )}\n    </div>\n  );\n\n  const cartModalContent = (\n    <React.Fragment>\n      {cartItems}\n      <div className={classes.total}>\n        <span> Total Amount </span>\n        <span> {totalAmount} </span>\n      </div>\n      {isCheckout && (\n        <Checkout onConfirm={orderSubmitHandler} onCancel={props.onHideCart} />\n      )}\n      {!isCheckout && modalActions}\n    </React.Fragment>\n  );\n\n  const isSubmittingModalContent = <p> Submitting order data... </p>;\n  const didSubmitModalContent = (\n    <React.Fragment>\n      <p> Succesfully sent the order </p>\n      <div className={classes.actions}>\n      <button className={classes.button} onClick={props.onHideCart}>\n        {\" \"}\n        Close{\" \"}\n      </button>\n      </div>\n    </React.Fragment>\n  );\n\n  return (\n    <Modal onClose={props.onHideCart}>\n      {!isSubmitting && !didSubmit && cartModalContent}\n      {isSubmitting && isSubmittingModalContent}\n      {!isSubmitting && didSubmit && didSubmitModalContent}\n    </Modal>\n  );\n};\n\nexport default Cart;\n\n\n\n\n\n\n// fetch(\"http://localhost:8080/addorder\", {\n//       method: \"POST\",\n//       body: JSON.stringify({\n//         user: userData,\n//         orderedItems: ctxCart.items,\n//       }),\n//     });"]},"metadata":{},"sourceType":"module"}