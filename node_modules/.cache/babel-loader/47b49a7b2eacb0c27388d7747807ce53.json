{"ast":null,"code":"var _jsxFileName = \"/Users/vivekchowdary/Food/src/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport CartContext from './cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartItems = [{\n  items: [],\n  totalAmount: 0\n}];\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedItems = state.items.concat(action.item);\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartItems;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartItem] = useReducer(cartReducer, defaultCartItems);\n\n  const addItemToCartHandler = item => {\n    dispatchCartItem({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemToCartHandler = id => {\n    dispatchCartItem({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = [{\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemToCartHandler\n  }];\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"M/fryr+1/sUv9uMrw/oBinuGsyo=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/vivekchowdary/Food/src/store/CartProvider.js"],"names":["React","useReducer","CartContext","defaultCartItems","items","totalAmount","cartReducer","state","action","type","updatedItems","concat","item","updatedTotalAmount","price","amount","CartProvider","props","cartState","dispatchCartItem","addItemToCartHandler","removeItemToCartHandler","id","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AACtBC,EAAAA,KAAK,EAAE,EADe;AAEtBC,EAAAA,WAAW,EAAE;AAFS,CAAD,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACvB,UAAMC,YAAY,GAAGH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAArB;AACA,UAAMC,kBAAkB,GAAGN,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,IAAP,CAAYE,KAAZ,GAAoBN,MAAM,CAACI,IAAP,CAAYG,MAA/E;AAEA,WAAO;AACHX,MAAAA,KAAK,EAAEM,YADJ;AAEHL,MAAAA,WAAW,EAAEQ;AAFV,KAAP;AAIH;;AACD,SAAOV,gBAAP;AACH,CAXD;;AAaA,MAAMa,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAE5B,QAAM,CAACC,SAAD,EAAYC,gBAAZ,IAAgClB,UAAU,CAACK,WAAD,EAAcH,gBAAd,CAAhD;;AAEA,QAAMiB,oBAAoB,GAAIR,IAAD,IAAU;AACnCO,IAAAA,gBAAgB,CAAC;AAAEV,MAAAA,IAAI,EAAE,KAAR;AAAeG,MAAAA,IAAI,EAAEA;AAArB,KAAD,CAAhB;AACH,GAFD;;AAIA,QAAMS,uBAAuB,GAAIC,EAAD,IAAQ;AACpCH,IAAAA,gBAAgB,CAAC;AAAEV,MAAAA,IAAI,EAAE,QAAR;AAAkBa,MAAAA,EAAE,EAAEA;AAAtB,KAAD,CAAhB;AACH,GAFD;;AAIA,QAAMC,WAAW,GAAG,CAAC;AACjBnB,IAAAA,KAAK,EAAEc,SAAS,CAACd,KADA;AAEjBC,IAAAA,WAAW,EAAEa,SAAS,CAACb,WAFN;AAGjBmB,IAAAA,OAAO,EAAEJ,oBAHQ;AAIjBK,IAAAA,UAAU,EAAEJ;AAJK,GAAD,CAApB;AAOA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACKN,KAAK,CAACS;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAxBD;;GAAMV,Y;;KAAAA,Y;AA0BN,eAAeA,YAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport CartContext from './cart-context';\n\nconst defaultCartItems = [{\n    items: [],\n    totalAmount: 0\n}]\n\nconst cartReducer = (state, action) => {\n    if (action.type === 'ADD') {\n        const updatedItems = state.items.concat(action.item);\n        const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount\n\n        return {\n            items: updatedItems,\n            totalAmount: updatedTotalAmount\n        }\n    }\n    return defaultCartItems;\n}\n\nconst CartProvider = (props) => {\n\n    const [cartState, dispatchCartItem] = useReducer(cartReducer, defaultCartItems);\n\n    const addItemToCartHandler = (item) => {\n        dispatchCartItem({ type: 'ADD', item: item});\n    };\n\n    const removeItemToCartHandler = (id) => {\n        dispatchCartItem({ type: 'REMOVE', id: id});\n    };\n\n    const cartContext = [{\n        items: cartState.items,\n        totalAmount: cartState.totalAmount,\n        addItem: addItemToCartHandler,\n        removeItem: removeItemToCartHandler\n    }];\n    \n    return (\n        <CartContext.Provider value={cartContext}>\n            {props.children}\n        </CartContext.Provider>\n    )\n}\n\nexport default CartProvider\n"]},"metadata":{},"sourceType":"module"}