{"ast":null,"code":"var _jsxFileName = \"/Users/vivekchowdary/My_World/foodapp/client/src/components/Meals/AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport classes from \"./AvailableMeals.module.css\";\nimport MealItem from \"./MealItem/MealItem\";\nimport Card from \"../UI/Card\";\nimport { useEffect, useState } from \"react\"; // import { axiosInstance } from \"../../../config\";\n\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState();\n  useEffect(() => {\n    // const firebaseapi = \"https://react-http-75e6f-default-rtdb.firebaseio.com/meals.json\"\n    const fetchMeals = async () => {\n      // const response = await fetch(\n      //   \"http://localhost:8080/getmeals\"\n      // );\n      const response = axios.get(\"https://peddadameals.herokuapp.com/getmeals\").then(res => {\n        for (const key in res.data) {\n          loadedMeals.push({\n            id: key,\n            name: responseData[key].name,\n            description: responseData[key].description,\n            price: responseData[key].price\n          });\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const responseData = await response.data;\n      console.log(responseData); // const loadedMeals = [];\n      // for (const key in responseData) {\n      //   loadedMeals.push({\n      //     id: key,\n      //     name: responseData[key].name,\n      //     description: responseData[key].description,\n      //     price: responseData[key].price,\n      //   });\n      // }\n\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n\n    fetchMeals().catch(error => {\n      setIsLoading(false);\n      setHttpError(error.message);\n    });\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Loading... \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (httpError) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsError,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: httpError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"6pndJp/WWpMtmhSnoCH9k0tFnXc=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["/Users/vivekchowdary/My_World/foodapp/client/src/components/Meals/AvailableMeals.js"],"names":["classes","MealItem","Card","useEffect","useState","axios","AvailableMeals","meals","setMeals","isLoading","setIsLoading","httpError","setHttpError","fetchMeals","response","get","then","res","key","data","loadedMeals","push","id","name","responseData","description","price","ok","Error","console","log","catch","error","message","MealsLoading","MealsError","mealsList","map","meal"],"mappings":"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","sourcesContent":["import classes from \"./AvailableMeals.module.css\";\nimport MealItem from \"./MealItem/MealItem\";\nimport Card from \"../UI/Card\";\nimport { useEffect, useState } from \"react\";\n// import { axiosInstance } from \"../../../config\";\nimport axios from \"axios\";\n\nconst AvailableMeals = () => {\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState();\n\n  useEffect(() => {\n    // const firebaseapi = \"https://react-http-75e6f-default-rtdb.firebaseio.com/meals.json\"\n    const fetchMeals = async () => {\n      // const response = await fetch(\n      //   \"http://localhost:8080/getmeals\"\n      // );\n      const response = axios\n        .get(\"https://peddadameals.herokuapp.com/getmeals\")\n        .then((res) => {\n\n          for (const key in res.data) {\n            loadedMeals.push({\n              id: key,\n              name: responseData[key].name,\n              description: responseData[key].description,\n              price: responseData[key].price,\n            });\n          }\n        });\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const responseData = await response.data;\n      console.log(responseData);\n\n      // const loadedMeals = [];\n\n      // for (const key in responseData) {\n      //   loadedMeals.push({\n      //     id: key,\n      //     name: responseData[key].name,\n      //     description: responseData[key].description,\n      //     price: responseData[key].price,\n      //   });\n      // }\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n\n    fetchMeals().catch((error) => {\n      setIsLoading(false);\n      setHttpError(error.message);\n    });\n  }, []);\n\n  if (isLoading) {\n    return (\n      <section className={classes.MealsLoading}>\n        <p> Loading... </p>\n      </section>\n    );\n  }\n\n  if (httpError) {\n    return (\n      <section className={classes.MealsError}>\n        <p>{httpError}</p>\n      </section>\n    );\n  }\n\n  const mealsList = meals.map((meal) => (\n    <MealItem\n      id={meal.id}\n      key={meal.id}\n      name={meal.name}\n      description={meal.description}\n      price={meal.price}\n    />\n  ));\n\n  return (\n    <section className={classes.meals}>\n      <Card>\n        <ul>{mealsList}</ul>\n      </Card>\n    </section>\n  );\n};\n\nexport default AvailableMeals;\n"]},"metadata":{},"sourceType":"module"}